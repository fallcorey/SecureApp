name: Android Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Make gradlew executable and setup wrapper
      run: |
        # Делаем gradlew исполняемым
        chmod +x gradlew
        
        # Создаем папку если нет
        mkdir -p gradle/wrapper
        
        # Скачиваем gradle-wrapper.jar если отсутствует
        if [ ! -f "gradle/wrapper/gradle-wrapper.jar" ]; then
            echo "Downloading gradle-wrapper.jar..."
            curl -L -o gradle/wrapper/gradle-wrapper.jar \
                https://github.com/gradle/gradle/raw/master/gradle/wrapper/gradle-wrapper.jar
        fi
        
        # Проверяем что файлы существуют
        echo "File permissions:"
        ls -la gradlew
        ls -la gradle/wrapper/gradle-wrapper.jar

    - name: Set up environment
      run: |
        echo "sdk.dir=$ANDROID_HOME" > local.properties
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "JAVA_HOME=$JAVA_HOME" >> $GITHUB_ENV

    - name: Build Debug APK
      run: |
        echo "=== Environment ==="
        echo "JAVA_HOME: $JAVA_HOME"
        echo "ANDROID_HOME: $ANDROID_HOME"
        
        echo "=== Java version ==="
        java -version
        
        echo "=== Building APK ==="
        ./gradlew assembleDebug --no-daemon --console=plain

    - name: Upload APK Artifact
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: app/build/outputs/apk/debug/*.apk
        retention-days: 7

    - name: Show build results
      if: always()
      run: |
        echo "=== BUILD RESULTS ==="
        find app/build -name "*.apk" -exec ls -la {} \; 2>/dev/null || echo "No APK files found"
        echo "Build status: ${{ job.status }}"
