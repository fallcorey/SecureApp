package com.company.secureapp

import android.os.Bundle
import android.widget.Button
import android.widget.EditText
import android.widget.Toast
import androidx.appcompat.app.AppCompatActivity

class SettingsActivity : AppCompatActivity() {

    private lateinit var preferenceHelper: SimplePreferenceHelper

    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContentView(R.layout.activity_settings)

        preferenceHelper = SimplePreferenceHelper(this)

        val saveButton = findViewById<Button>(R.id.save_button)
        val smsNumber = findViewById<EditText>(R.id.sms_number)
        val serverUrl = findViewById<EditText>(R.id.server_endpoint_url)
        val userName = findViewById<EditText>(R.id.user_full_name)
        val userPhone = findViewById<EditText>(R.id.user_phone_number)

        // –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        smsNumber.setText(preferenceHelper.getString("sms_number", ""))
        serverUrl.setText(preferenceHelper.getString("server_url", ""))
        userName.setText(preferenceHelper.getString("user_name", ""))
        userPhone.setText(preferenceHelper.getString("user_phone", ""))

        saveButton.setOnClickListener {
            val smsNumberText = smsNumber.text.toString().trim()
            val serverUrlText = serverUrl.text.toString().trim()
            val userNameText = userName.text.toString().trim()
            val userPhoneText = userPhone.text.toString().trim()

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            if (smsNumberText.isNotBlank() && !smsNumberText.startsWith("+")) {
                Toast.makeText(this, 
                    "‚ùå Phone number must start with '+' (format: +79123456789)", 
                    Toast.LENGTH_LONG).show()
                return@setOnClickListener
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–ª–∏–Ω—É –Ω–æ–º–µ—Ä–∞
            if (smsNumberText.isNotBlank() && smsNumberText.length < 11) {
                Toast.makeText(this, 
                    "‚ùå Phone number too short (minimum 11 digits with +)", 
                    Toast.LENGTH_LONG).show()
                return@setOnClickListener
            }

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
            if (userPhoneText.isNotBlank() && !userPhoneText.startsWith("+")) {
                Toast.makeText(this, 
                    "‚ùå Your phone number must start with '+'", 
                    Toast.LENGTH_LONG).show()
                return@setOnClickListener
            }

            try {
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
                preferenceHelper.saveString("sms_number", smsNumberText)
                preferenceHelper.saveString("server_url", serverUrlText)
                preferenceHelper.saveString("user_name", userNameText)
                preferenceHelper.saveString("user_phone", userPhoneText)
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
                val successMessage = if (smsNumberText.isNotBlank()) {
                    "‚úÖ Settings saved!\nüì± SMS will be sent to: $smsNumberText"
                } else {
                    "‚úÖ Settings saved!\n‚ö†Ô∏è SMS number not set - alerts won't work"
                }
                
                Toast.makeText(this, successMessage, Toast.LENGTH_LONG).show()
                finish()
                
            } catch (e: Exception) {
                Toast.makeText(this, "‚ùå Save error: ${e.message}", Toast.LENGTH_LONG).show()
            }
        }
    }
}
